(()=>{"use strict";var e={426:(e,n,t)=>{t.d(n,{Z:()=>p});var a=t(537),r=t.n(a),o=t(645),s=t.n(o),i=t(667),d=t.n(i),l=new URL(t(400),t.b),c=new URL(t(906),t.b),A=s()(r()),u=d()(l),m=d()(c);A.push([e.id,'@font-face {\n  font-family: "BigShouldersStencil";\n  src: url('+u+');\n}\n\n@font-face {\n  font-family: "Audiowide-Regular";\n  src: url('+m+');\n}\n\nhtml {\n  background-color: black;\n}\n\nbody {\n  text-align: center;\n}\n\nmain {\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  justify-content: center;\n  font-family: Audiowide-Regular;\n  font-size: 1.5rem;\n}\n\n@keyframes marcosclave1 {\n  from {\n    opacity: 0.5;\n  }\n  to {\n    opacity: 1;\n  }\n}\n\nh1 {\n  grid-column: 1 / 3;\n  text-align: center;\n  font-family: "BigShouldersStencil";\n  color: grey;\n  font-size: 7rem;\n  text-shadow: 0 0 0.5rem rgb(162, 0, 255);\n\n  animation: marcosclave1 2s linear 0s infinite alternate;\n}\n\nh2 {\n  grid-column: 1 / 3;\n  color: goldenrod;\n  font-size: 2rem;\n}\n\n.name {\n\tmargin-bottom: 1rem;\n  color: forestgreen;\n}\n\ninput {\n  background-color: grey;\n  border-style: none;\n  border-radius: 0.5rem;\n  padding: 1rem;\n  font-size: 1.5rem;\n  font-weight: bold;\n\tfont-family: "Courier New", Courier, monospace;\n\ttext-align: center;\n  box-shadow: 0 0 0.5rem rgb(150, 150, 150);\n}\n\ninput::placeholder {\n\tcolor: rgb(64, 64, 64);\n}\n\ninput:focus {\n\toutline-style: none;\n\tbackground-color: olivedrab;\n}\n\n.submitNames {\n  grid-column: 1 / 3;\n\tjustify-self: center;\n\tmargin: 2rem;\n\tpadding: 1rem;\n\tbackground-color: orangered;\n\tborder-style: outset;\n\tborder-width: 0.5rem;\n\tborder-color: rgb(64, 0, 128);\n\tborder-radius: 1rem;\n\tfont-size: 1rem;\n  font-weight: bold;\n\tfont-family: "Courier New", Courier, monospace;\n\tanimation: marcosclave1 2s linear 0s infinite alternate;\n}\n\n.submitNames.inset {\n\tborder-style: inset;\n}\n\n.messages {\n  grid-column: 1 / 3;\n  color: green;\n}\n\n.gameboard {\n  display: flex;\n  margin: 1rem;\n  cursor: crosshair;\n}\n\n.column {\n  width: 100%;\n}\n\n.row {\n  display: flex;\n  justify-content: space-between;\n  width: 100%;\n}\n\n.rowDraggable {\n  display: flex;\n  justify-content: flex-start;\n  width: 100%;\n}\n\n.hidden {\n  display: none;\n}\n\n.square {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  aspect-ratio: 1;\n  border-style: solid;\n  border-color: rgb(0, 0, 0);\n  border-width: 0.1rem;\n  border-radius: 0.5rem;\n}\n\n.square:hover {\n  opacity: 0.7;\n}\n\n.notAttacked {\n  background-color: grey;\n}\n\n.square.water {\n  background-color: blue;\n}\n\n.waterTrans {\n  transform: rotateX(720deg);\n  transition: transform 1000ms ease-in-out;\n}\n\n.square.ship {\n  background-color: brown;\n}\n\n.shipTrans {\n  transform: rotateY(720deg);\n  transition: transform 1000ms ease-in-out;\n}\n\n.square.sunkenShip {\n  background-color: red;\n  transform: rotateZ(720deg);\n  transition: transform 1000ms ease-in-out;\n}\n\n.sunkenShipTrans {\n  transform: rotateZ(720deg);\n  transition: transform 1000ms ease-in-out;\n}\n\n.square.attacked {\n  border-style: solid;\n  border-color: red;\n  transition: transform 1000ms ease-in-out;\n}\n\n.square.attackedTrans {\n  transform: rotateZ(720deg) scale(10);\n}\n\n@keyframes marcosclave {\n  from {\n    opacity: 0.5;\n    transform: scale(1);\n  }\n  to {\n    opacity: 1;\n    transform: scale(2);\n  }\n}\n\n.lastAttacked {\n  animation: marcosclave 1s linear 0s infinite alternate;\n}\n\nbutton.toggleBoards {\n  font-size: 1.5rem;\n  text-align: center;\n  background-color: orangered;\n  border-radius: 1rem;\n  border-width: 1rem;\n  border-style: none;\n  padding: 1rem;\n}\n\nbutton.battleBegins {\n  font-size: 1.5rem;\n  text-align: center;\n  background-color: rgb(162, 0, 255);\n  border-radius: 1rem;\n  border-width: 1rem;\n  border-style: none;\n  padding: 1rem;\n}\n\nbutton.showHiddenBoards {\n  font-size: 1.5rem;\n  text-align: center;\n  background-color: orangered;\n  border-radius: 1rem;\n  border-width: 1rem;\n  border-style: none;\n  padding: 1rem;\n}\n',"",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;EACE,kCAAkC;EAClC,4CAAuC;AACzC;;AAEA;EACE,gCAAgC;EAChC,4CAAmC;AACrC;;AAEA;EACE,uBAAuB;AACzB;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,aAAa;EACb,qCAAqC;EACrC,uBAAuB;EACvB,8BAA8B;EAC9B,iBAAiB;AACnB;;AAEA;EACE;IACE,YAAY;EACd;EACA;IACE,UAAU;EACZ;AACF;;AAEA;EACE,kBAAkB;EAClB,kBAAkB;EAClB,kCAAkC;EAClC,WAAW;EACX,eAAe;EACf,wCAAwC;;EAExC,uDAAuD;AACzD;;AAEA;EACE,kBAAkB;EAClB,gBAAgB;EAChB,eAAe;AACjB;;AAEA;CACC,mBAAmB;EAClB,kBAAkB;AACpB;;AAEA;EACE,sBAAsB;EACtB,kBAAkB;EAClB,qBAAqB;EACrB,aAAa;EACb,iBAAiB;EACjB,iBAAiB;CAClB,8CAA8C;CAC9C,kBAAkB;EACjB,yCAAyC;AAC3C;;AAEA;CACC,sBAAsB;AACvB;;AAEA;CACC,mBAAmB;CACnB,2BAA2B;AAC5B;;AAEA;EACE,kBAAkB;CACnB,oBAAoB;CACpB,YAAY;CACZ,aAAa;CACb,2BAA2B;CAC3B,oBAAoB;CACpB,oBAAoB;CACpB,6BAA6B;CAC7B,mBAAmB;CACnB,eAAe;EACd,iBAAiB;CAClB,8CAA8C;CAC9C,uDAAuD;AACxD;;AAEA;CACC,mBAAmB;AACpB;;AAEA;EACE,kBAAkB;EAClB,YAAY;AACd;;AAEA;EACE,aAAa;EACb,YAAY;EACZ,iBAAiB;AACnB;;AAEA;EACE,WAAW;AACb;;AAEA;EACE,aAAa;EACb,8BAA8B;EAC9B,WAAW;AACb;;AAEA;EACE,aAAa;EACb,2BAA2B;EAC3B,WAAW;AACb;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,aAAa;EACb,uBAAuB;EACvB,mBAAmB;EACnB,eAAe;EACf,mBAAmB;EACnB,0BAA0B;EAC1B,oBAAoB;EACpB,qBAAqB;AACvB;;AAEA;EACE,YAAY;AACd;;AAEA;EACE,sBAAsB;AACxB;;AAEA;EACE,sBAAsB;AACxB;;AAEA;EACE,0BAA0B;EAC1B,wCAAwC;AAC1C;;AAEA;EACE,uBAAuB;AACzB;;AAEA;EACE,0BAA0B;EAC1B,wCAAwC;AAC1C;;AAEA;EACE,qBAAqB;EACrB,0BAA0B;EAC1B,wCAAwC;AAC1C;;AAEA;EACE,0BAA0B;EAC1B,wCAAwC;AAC1C;;AAEA;EACE,mBAAmB;EACnB,iBAAiB;EACjB,wCAAwC;AAC1C;;AAEA;EACE,oCAAoC;AACtC;;AAEA;EACE;IACE,YAAY;IACZ,mBAAmB;EACrB;EACA;IACE,UAAU;IACV,mBAAmB;EACrB;AACF;;AAEA;EACE,sDAAsD;AACxD;;AAEA;EACE,iBAAiB;EACjB,kBAAkB;EAClB,2BAA2B;EAC3B,mBAAmB;EACnB,kBAAkB;EAClB,kBAAkB;EAClB,aAAa;AACf;;AAEA;EACE,iBAAiB;EACjB,kBAAkB;EAClB,kCAAkC;EAClC,mBAAmB;EACnB,kBAAkB;EAClB,kBAAkB;EAClB,aAAa;AACf;;AAEA;EACE,iBAAiB;EACjB,kBAAkB;EAClB,2BAA2B;EAC3B,mBAAmB;EACnB,kBAAkB;EAClB,kBAAkB;EAClB,aAAa;AACf",sourcesContent:['@font-face {\n  font-family: "BigShouldersStencil";\n  src: url("./BigShouldersStencil.woff2");\n}\n\n@font-face {\n  font-family: "Audiowide-Regular";\n  src: url("./Audiowide-Regular.ttf");\n}\n\nhtml {\n  background-color: black;\n}\n\nbody {\n  text-align: center;\n}\n\nmain {\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  justify-content: center;\n  font-family: Audiowide-Regular;\n  font-size: 1.5rem;\n}\n\n@keyframes marcosclave1 {\n  from {\n    opacity: 0.5;\n  }\n  to {\n    opacity: 1;\n  }\n}\n\nh1 {\n  grid-column: 1 / 3;\n  text-align: center;\n  font-family: "BigShouldersStencil";\n  color: grey;\n  font-size: 7rem;\n  text-shadow: 0 0 0.5rem rgb(162, 0, 255);\n\n  animation: marcosclave1 2s linear 0s infinite alternate;\n}\n\nh2 {\n  grid-column: 1 / 3;\n  color: goldenrod;\n  font-size: 2rem;\n}\n\n.name {\n\tmargin-bottom: 1rem;\n  color: forestgreen;\n}\n\ninput {\n  background-color: grey;\n  border-style: none;\n  border-radius: 0.5rem;\n  padding: 1rem;\n  font-size: 1.5rem;\n  font-weight: bold;\n\tfont-family: "Courier New", Courier, monospace;\n\ttext-align: center;\n  box-shadow: 0 0 0.5rem rgb(150, 150, 150);\n}\n\ninput::placeholder {\n\tcolor: rgb(64, 64, 64);\n}\n\ninput:focus {\n\toutline-style: none;\n\tbackground-color: olivedrab;\n}\n\n.submitNames {\n  grid-column: 1 / 3;\n\tjustify-self: center;\n\tmargin: 2rem;\n\tpadding: 1rem;\n\tbackground-color: orangered;\n\tborder-style: outset;\n\tborder-width: 0.5rem;\n\tborder-color: rgb(64, 0, 128);\n\tborder-radius: 1rem;\n\tfont-size: 1rem;\n  font-weight: bold;\n\tfont-family: "Courier New", Courier, monospace;\n\tanimation: marcosclave1 2s linear 0s infinite alternate;\n}\n\n.submitNames.inset {\n\tborder-style: inset;\n}\n\n.messages {\n  grid-column: 1 / 3;\n  color: green;\n}\n\n.gameboard {\n  display: flex;\n  margin: 1rem;\n  cursor: crosshair;\n}\n\n.column {\n  width: 100%;\n}\n\n.row {\n  display: flex;\n  justify-content: space-between;\n  width: 100%;\n}\n\n.rowDraggable {\n  display: flex;\n  justify-content: flex-start;\n  width: 100%;\n}\n\n.hidden {\n  display: none;\n}\n\n.square {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  aspect-ratio: 1;\n  border-style: solid;\n  border-color: rgb(0, 0, 0);\n  border-width: 0.1rem;\n  border-radius: 0.5rem;\n}\n\n.square:hover {\n  opacity: 0.7;\n}\n\n.notAttacked {\n  background-color: grey;\n}\n\n.square.water {\n  background-color: blue;\n}\n\n.waterTrans {\n  transform: rotateX(720deg);\n  transition: transform 1000ms ease-in-out;\n}\n\n.square.ship {\n  background-color: brown;\n}\n\n.shipTrans {\n  transform: rotateY(720deg);\n  transition: transform 1000ms ease-in-out;\n}\n\n.square.sunkenShip {\n  background-color: red;\n  transform: rotateZ(720deg);\n  transition: transform 1000ms ease-in-out;\n}\n\n.sunkenShipTrans {\n  transform: rotateZ(720deg);\n  transition: transform 1000ms ease-in-out;\n}\n\n.square.attacked {\n  border-style: solid;\n  border-color: red;\n  transition: transform 1000ms ease-in-out;\n}\n\n.square.attackedTrans {\n  transform: rotateZ(720deg) scale(10);\n}\n\n@keyframes marcosclave {\n  from {\n    opacity: 0.5;\n    transform: scale(1);\n  }\n  to {\n    opacity: 1;\n    transform: scale(2);\n  }\n}\n\n.lastAttacked {\n  animation: marcosclave 1s linear 0s infinite alternate;\n}\n\nbutton.toggleBoards {\n  font-size: 1.5rem;\n  text-align: center;\n  background-color: orangered;\n  border-radius: 1rem;\n  border-width: 1rem;\n  border-style: none;\n  padding: 1rem;\n}\n\nbutton.battleBegins {\n  font-size: 1.5rem;\n  text-align: center;\n  background-color: rgb(162, 0, 255);\n  border-radius: 1rem;\n  border-width: 1rem;\n  border-style: none;\n  padding: 1rem;\n}\n\nbutton.showHiddenBoards {\n  font-size: 1.5rem;\n  text-align: center;\n  background-color: orangered;\n  border-radius: 1rem;\n  border-width: 1rem;\n  border-style: none;\n  padding: 1rem;\n}\n'],sourceRoot:""}]);const p=A},645:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",a=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),a&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),a&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,a,r,o){"string"==typeof e&&(e=[[null,e,void 0]]);var s={};if(a)for(var i=0;i<this.length;i++){var d=this[i][0];null!=d&&(s[d]=!0)}for(var l=0;l<e.length;l++){var c=[].concat(e[l]);a&&s[c[0]]||(void 0!==o&&(void 0===c[5]||(c[1]="@layer".concat(c[5].length>0?" ".concat(c[5]):""," {").concat(c[1],"}")),c[5]=o),t&&(c[2]?(c[1]="@media ".concat(c[2]," {").concat(c[1],"}"),c[2]=t):c[2]=t),r&&(c[4]?(c[1]="@supports (".concat(c[4],") {").concat(c[1],"}"),c[4]=r):c[4]="".concat(r)),n.push(c))}},n}},667:e=>{e.exports=function(e,n){return n||(n={}),e?(e=String(e.__esModule?e.default:e),/^['"].*['"]$/.test(e)&&(e=e.slice(1,-1)),n.hash&&(e+=n.hash),/["'() \t\n]|(%20)/.test(e)||n.needQuotes?'"'.concat(e.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):e):e}},537:e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var a=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(a),o="/*# ".concat(r," */"),s=t.sources.map((function(e){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(e," */")}));return[n].concat(s).concat([o]).join("\n")}return[n].join("\n")}},379:e=>{var n=[];function t(e){for(var t=-1,a=0;a<n.length;a++)if(n[a].identifier===e){t=a;break}return t}function a(e,a){for(var o={},s=[],i=0;i<e.length;i++){var d=e[i],l=a.base?d[0]+a.base:d[0],c=o[l]||0,A="".concat(l," ").concat(c);o[l]=c+1;var u=t(A),m={css:d[1],media:d[2],sourceMap:d[3],supports:d[4],layer:d[5]};if(-1!==u)n[u].references++,n[u].updater(m);else{var p=r(m,a);a.byIndex=i,n.splice(i,0,{identifier:A,updater:p,references:1})}s.push(A)}return s}function r(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,r){var o=a(e=e||[],r=r||{});return function(e){e=e||[];for(var s=0;s<o.length;s++){var i=t(o[s]);n[i].references--}for(var d=a(e,r),l=0;l<o.length;l++){var c=t(o[l]);0===n[c].references&&(n[c].updater(),n.splice(c,1))}o=d}}},569:e=>{var n={};e.exports=function(e,t){var a=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!a)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");a.appendChild(t)}},216:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},565:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},795:e=>{e.exports=function(e){var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var a="";t.supports&&(a+="@supports (".concat(t.supports,") {")),t.media&&(a+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(a+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),a+=t.css,r&&(a+="}"),t.media&&(a+="}"),t.supports&&(a+="}");var o=t.sourceMap;o&&"undefined"!=typeof btoa&&(a+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),n.styleTagTransform(a,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},589:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}},906:(e,n,t)=>{e.exports=t.p+"2017bdb174a62d0daa3e.ttf"},400:(e,n,t)=>{e.exports=t.p+"f92bc1dc712a26714f64.woff2"}},n={};function t(a){var r=n[a];if(void 0!==r)return r.exports;var o=n[a]={id:a,exports:{}};return e[a](o,o.exports,t),o.exports}t.m=e,t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var a in n)t.o(n,a)&&!t.o(e,a)&&Object.defineProperty(e,a,{enumerable:!0,get:n[a]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),(()=>{var e;t.g.importScripts&&(e=t.g.location+"");var n=t.g.document;if(!e&&n&&(n.currentScript&&(e=n.currentScript.src),!e)){var a=n.getElementsByTagName("script");a.length&&(e=a[a.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=e})(),t.b=document.baseURI||self.location.href,t.nc=void 0;var a={};(()=>{t.d(a,{FU:()=>$,Ot:()=>T,qC:()=>q,Rk:()=>I,B7:()=>x});var e=t(379),n=t.n(e),r=t(795),o=t.n(r),s=t(569),i=t.n(s),d=t(565),l=t.n(d),c=t(216),A=t.n(c),u=t(589),m=t.n(u),p=t(426),h={};function C(e){const n=[],t=[];for(let n=0;n<e;n++)t.push(null);for(let a=0;a<e;a++)n.push([...t]);const a=[],r=[];for(let n=0;n<e;n++)r.push(!1);for(let n=0;n<e;n++)a.push([...r]);return{board:n,receivedHits:a,shipsLeft:0,placeShip:function(n,t,a,r,o){const s=function(e,n,t){return{shipID:e,length:n,isVertical:t,timesHit:0,hit:function(){this.timesHit++},isSunk:function(){return this.timesHit===this.length}}}(n,t,a);let i=[];if(s.isVertical&&o+s.length>e)return"Ship is too large!";if(!s.isVertical&&r+s.length>e)return"Ship is too large!";if(s.isVertical&&o+s.length<=e){for(let e=0;e<s.length;e++)if(null!==this.board[r][o+e])return"There's another ship there!";for(let e=0;e<s.length;e++)this.board[r][o+e]=s,i.push([r,o+e]);return this.shipsLeft++,i}if(!s.isVertical&&r+s.length<=e){for(let e=0;e<s.length;e++)if(null!==this.board[r+e][o])return"There's another ship there!";for(let e=0;e<s.length;e++)this.board[r+e][o]=s,i.push([r+e,o]);return this.shipsLeft++,i}},removeShip:function(e){for(let n=0;n<this.board.length;n++)for(let t=0;t<this.board[n].length;t++)null!==this.board[n][t]&&this.board[n][t].shipID===e&&(this.board[n][t]=null)},receiveAttack:function(e,n){return this.receivedHits[e][n]?"¡Esa posición ya ha sido atacada!":(this.receivedHits[e][n]=!0,null===this.board[e][n]?"¡Agua!":(this.board[e][n].hit(),this.board[e][n].isSunk()?(this.shipsLeft--,0===this.shipsLeft?"¡Todos los barcos han sido hundidos!":"¡Barco hundido!"):"¡Barco tocado!"))}}}function f(e,n){return{name:e,gameboard:n}}function g(e,n){for(let t=0;t<5;t++){let a,r,o;do{a=Math.floor(Math.random()*n),r=Math.floor(Math.random()*n),o=(a+1)%2==0}while("object"!=typeof e.gameboard.placeShip(t+1,5-t,o,a,r))}}function B(e,n,t,a){const r=document.createElement("button");r.classList.add("toggleBoards"),a&&r.classList.add("hidden"),r.dataset.player=e,r.textContent="Esconder tableros y cambiar turno",r.addEventListener("click",(function(){const e=this.dataset.player;let a,r,o;if("player1"===e?(a="player2",r=n,o=t):(a="player1",r=t,o=n),e===x)return void alert(`¡Todavía no hiciste tu jugada, ${r}!`);document.querySelector(`.gameboard.${e}.ownBoard`).classList.toggle("hidden"),document.querySelector(`.gameboard.${a}.enemyBoard`).classList.toggle("hidden"),document.querySelector(`button[data-player="${e}"]`).classList.add("hidden");const s=document.querySelector(`[data-player="${e}"].lastAttacked`);s&&s.classList.remove("lastAttacked");const i=document.createElement("button");i.classList.add("showHiddenBoards"),i.textContent=`Mostrar tableros de ${o}`,i.addEventListener("click",(function(){document.querySelector(`.gameboard.${a}.ownBoard`).classList.toggle("hidden"),document.querySelector(`.gameboard.${e}.enemyBoard`).classList.toggle("hidden"),document.querySelector(`button[data-player="${a}"]`).classList.add("hidden"),i.classList.toggle("hidden")})),document.querySelector("main").appendChild(i)})),document.querySelector("main").appendChild(r)}function b(e,n,t){y();const a=document.createElement("div");if(a.classList.add("messages"),a.textContent=`${e}, posiciona tus ${t} barcos sobre las aguas...`,document.querySelector("main").appendChild(a),"Computadora"!==n){const e=document.createElement("div");e.classList.add("messages"),e.classList.add("messages2"),e.textContent=`¡Que ${n} no vea tu tablero!`,document.querySelector("main").appendChild(e)}}function y(){const e=document.querySelectorAll(".messages"),n=document.querySelector(".verticalShipsContainer"),t=document.querySelector(".horizontalShipsContainer"),a=document.querySelector(".gameboard.ownBoard");null!==e&&e.forEach((e=>{e.remove()})),null!==n&&n.remove(),null!==t&&t.remove(),null!==a&&a.remove()}function E(e,n,t,a,r,o,s,i){let d,l,c;const A=document.createElement("div");A.classList.add("gameboard"),"horizontalShipsToPlace"===s&&(A.style.flexDirection="column"),A.classList.add(o),A.classList.add(s);let u={};for(let C=0;C<t.length;C++){const f=document.createElement("div"),B=document.createElement("div");"verticalShipsToPlace"===s?f.classList.add("column"):"horizontalShipsToPlace"===s&&(f.classList.add("row"),B.classList.add("rowDraggable")),(C+2)%2||(B.draggable=!0),B.addEventListener("dragstart",b);for(let y=0;y<t[C].length;y++){const E=document.createElement("div");E.classList.add("square"),"horizontalShipsToPlace"===s&&(E.style.width="100%"),E.dataset.player=o,E.dataset.x=C,E.dataset.y=y,null===t[C][y]?(E.style.opacity="0","verticalShipsToPlace"===s&&(E.style.display="none")):(E.textContent="B",E.classList.add("ship"),E.dataset.shipId=t[C][y].shipID,E.dataset.shipLength=t[C][y].length,B.dataset.shipId=t[C][y].shipID,void 0===u[`shipID${t[C][y].shipID}`]&&(u[`shipID${t[C][y].shipID}`]=1),E.dataset.shipSquareNumber=u[`shipID${t[C][y].shipID}`],u[`shipID${t[C][y].shipID}`]++,E.addEventListener("mousedown",(function(e){void 0!==e.target.dataset.shipId&&(d=e.target.dataset.shipId,l=e.target.dataset.shipSquareNumber,c=e.target.dataset.shipLength)}))),B.appendChild(E)}function b(e){void 0!==d&&(e.dataTransfer.setData("text/plain",`${d}${l}${c}${s[0]}`),d=void 0)}f.appendChild(B),A.appendChild(f)}const m=document.createElement("div");"verticalShipsToPlace"===s?m.classList.add("verticalShipsContainer"):"horizontalShipsToPlace"===s&&m.classList.add("horizontalShipsContainer"),i&&m.classList.add("hidden"),m.appendChild(A);const p=document.createElement("button");p.textContent="Rotar barcos",p.addEventListener("click",(function(){let e=document.querySelector(".verticalShipsContainer"),n=document.querySelector(".horizontalShipsContainer");e.classList.toggle("hidden"),n.classList.toggle("hidden")})),m.appendChild(p);const h=document.createElement("button");h.textContent="Posicionar Barcos Aleatoriamente",h.classList.add("placeRandomShips"),h.addEventListener("click",(function(){"player1"===o?g(e,r):"player2"===o&&g(n,r),document.querySelector(".gameboard.ownBoard").remove(),v(e,n,o,"ownBoard",!1,r,!0),k(e,n,o,a,r)})),m.appendChild(h),document.querySelector("main").appendChild(m)}function v(e,n,t,a,r,o,s,i,d,l){const c=document.createElement("div");c.classList.add("gameboard"),c.classList.add(t),c.classList.add(a),r&&c.classList.add("hidden");let A,u={};"player1"===t?"ownBoard"===a?A=e.gameboard.board:"enemyBoard"===a&&(A=e.gameboard.receivedHits):"player2"===t&&("ownBoard"===a?A=n.gameboard.board:"enemyBoard"===a&&(A=n.gameboard.receivedHits));for(let e=0;e<A.length;e++){const n=document.createElement("div");n.classList.add("column");for(let a=0;a<A[e].length;a++){const r=document.createElement("div");r.classList.add("square"),r.dataset.player=t,r.dataset.x=e,r.dataset.y=a,null===A[e][a]?(r.textContent="A",r.classList.add("water"),s&&(r.addEventListener("dragenter",(function(e){e.preventDefault()})),r.addEventListener("dragover",(function(e){e.preventDefault()})),r.addEventListener("drop",h))):!1===A[e][a]?(r.textContent="?",r.classList.add("notAttacked"),r.addEventListener("click",m)):(r.textContent="B",r.classList.add("ship"),r.dataset.shipId=A[e][a].shipID,void 0===u[`shipID${A[e][a].shipID}`]&&(u[`shipID${A[e][a].shipID}`]=1),r.dataset.shipSquareNumber=u[`shipID${A[e][a].shipID}`],u[`shipID${A[e][a].shipID}`]++),n.appendChild(r)}c.appendChild(n)}function m(){$.call(this,e,n,o)}document.querySelector("main").appendChild(c);let p=0;function h(a){const r=a.dataTransfer.getData("text/plain");if(""===r)return;const s=parseInt(r[0],10),l=parseInt(r[1],10),c=parseInt(r[2],10),A=parseInt(a.target.dataset.x,10),u=parseInt(a.target.dataset.y,10);let m,h,C=null,f=null;if("v"===r[3]?(m=!0,C=parseInt(A,10),f=u-l+1):"h"===r[3]&&(m=!1,C=A-l+1,f=parseInt(u,10)),"player1"===t?h=e.gameboard.placeShip(s,c,m,C,f):"player2"===t&&(h=n.gameboard.placeShip(s,c,m,C,f)),"string"==typeof h)return;d.removeShip(s);const g=document.querySelector(`.gameboard.${this.dataset.player}.ownBoard`);for(let e=0;e<h.length;e++){const n=h[e],t=g.querySelector(`[data-x="${n[0]}"][data-y="${n[1]}"]`);t.classList.remove("water"),t.textContent="B",t.classList.add("ship")}const B=document.querySelector(".verticalShipsContainer").querySelectorAll(`[data-ship-id="${s}"]`);for(let e=0;e<B.length;e++){const n=B[e];n.style.opacity="0",n.setAttribute.draggable=!1}const b=document.querySelector(".horizontalShipsContainer").querySelectorAll(`[data-ship-id="${s}"]`);for(let e=0;e<b.length;e++)b[e].style.opacity="0";document.querySelector(`[data-ship-id="${s}"][draggable="true"]`).setAttribute("draggable","false"),p++,p===i&&(p=0,k(e,n,this.dataset.player,i,o))}}function k(e,n,t,a,r){let o;"player1"===t&&"Computadora"!==n.name?(o=document.createElement("button"),o.classList.add("toggleBoards"),o.textContent=`Dejar que ${n.name} posicione sus barcos`,o.addEventListener("click",(()=>{o.remove(),I(e,n,"player2",a,C(r),r)}))):"player1"===t&&"Computadora"===n.name?(o=document.createElement("button"),o.classList.add("battleBegins"),o.textContent="¡Empieza el juego!",o.addEventListener("click",(()=>{o.remove(),g(n,r),T(e,n,r)}))):"player2"===t&&(o=document.createElement("button"),o.classList.add("battleBegins"),o.textContent=`¡Ocultá tu tablero y dejá que ${e.name} empiece el juego!`,o.addEventListener("click",(()=>{o.remove(),T(e,n,r)}))),document.querySelector(".verticalShipsContainer").remove(),document.querySelector(".horizontalShipsContainer").remove();const s=document.querySelector(".messages"),i=document.querySelector(".messages2");i?i.after(o):s&&s.after(o)}function L(e,n,t,a){function r(){if("Computadora"===t){const n=function(e,n){let t,a;do{t=Math.floor(Math.random()*e),a=Math.floor(Math.random()*e)}while(!0===n.gameboard.receivedHits[t][a]);return{result:n.gameboard.receiveAttack(t,a),x:t,y:a}}(a,e),r=document.querySelector(`:not(.notAttacked)[data-player="player1"][data-x="${n.x}"][data-y="${n.y}"]`);function o(){r.classList.remove("attackedTrans"),"¡Todos los barcos han sido hundidos!"===n.result&&setTimeout((()=>{w(e.name,t,"player2")}),0),r.removeEventListener("transitionend",o)}r.textContent="🟏",r.classList.add("attacked"),r.classList.add("attackedTrans"),r.addEventListener("transitionend",o)}else{let s;"player1"===x?s="player2":"player2"===x&&(s="player1");const i=document.querySelector(`button[data-player="${s}"]`);setTimeout((()=>{i.classList.remove("hidden")}),0)}}"¡Agua!"===n?(this.addEventListener("transitionend",r),this.classList.add("water"),this.classList.add("waterTrans"),this.textContent="A"):"¡Barco tocado!"===n?(this.addEventListener("transitionend",r),this.classList.add("ship"),this.classList.add("shipTrans"),this.textContent="B"):"¡Barco hundido!"===n?(this.addEventListener("transitionend",r),this.classList.add("sunkenShip"),this.classList.add("sunkenShipTrans"),this.textContent="X"):"¡Todos los barcos han sido hundidos!"===n&&(this.classList.add("sunkenShip"),this.classList.add("sunkenShipTrans"),this.addEventListener("transitionend",(()=>{let n;"player1"===this.dataset.player?n="player2":"player2"===this.dataset.player&&(n="player1"),w(e.name,t,n)})),this.textContent="X")}function S(){const e=document.querySelector(`:not(.notAttacked)[data-player="${this.dataset.player}"][data-x="${this.dataset.x}"][data-y="${this.dataset.y}"]`);null!==e&&(e.textContent="🟏",e.classList.add("attacked"),e.classList.add("lastAttacked"))}function w(e,n,t){let a;"player1"===t?a=e:"player2"===t&&(a=n),alert(`Ganó ${a}.  ¡Hundió todos los barcos!`)}h.styleTagTransform=m(),h.setAttributes=l(),h.insert=i().bind(null,"head"),h.domAPI=o(),h.insertStyleElement=A(),n()(p.Z,h),p.Z&&p.Z.locals&&p.Z.locals;let x="player1";function q(e,n,t=10){I(f(e,C(t)),f(n,C(t)),"player1",5,C(t),t)}function I(e,n,t,a,r,o){"player1"===t?b(e.name,n.name,a):"player2"===t&&b(n.name,e.name,a),r.placeShip(1,5,!0,0,0),r.placeShip(2,4,!0,2,0),r.placeShip(3,3,!0,4,0),r.placeShip(4,2,!0,6,0),r.placeShip(5,1,!0,8,0),E(e,n,r.board,a,o,t,"verticalShipsToPlace",!1),E(e,n,r.board,a,o,t,"horizontalShipsToPlace",!0),v(e,n,t,"ownBoard",!1,o,!0,a,r,n.name)}function T(e,n,t){y(),alert(`Empieza ${e.name}`),v(e,n,"player1","ownBoard",!1,t),v(e,n,"player2","enemyBoard",!1,t),"Computadora"!==n.name&&(B("player1",e.name,n.name,"hide"),v(e,n,"player2","ownBoard",!0,t),v(e,n,"player1","enemyBoard",!0,t),B("player2",e.name,n.name,"hide"))}function $(e,n,t){if(this.dataset.player===x)return;let a;"player2"===this.dataset.player?(a=n.gameboard.receiveAttack(this.dataset.x,this.dataset.y),console.log(a)):"player1"===this.dataset.player&&(a=e.gameboard.receiveAttack(this.dataset.x,this.dataset.y),console.log(a)),"Computadora"!==n.name&&("player1"===x?x="player2":"player2"===x&&(x="player1")),L.call(this,e,a,n.name,t),S.call(this,a)}!function(){const e=document.createElement("h1");e.textContent="BATALLA NAVAL";const n=document.createElement("h2");n.textContent="¿Quiénes van a jugar?";const t=document.querySelector("main"),a=document.createElement("div"),r=document.createElement("div");r.classList.add("name"),r.textContent="Jugador/a 1:",a.appendChild(r);const o=document.createElement("input");o.setAttribute("placeholder","Escribí tu nombre"),a.appendChild(o);const s=document.createElement("div"),i=document.createElement("div");i.classList.add("name"),i.textContent="Jugador/a 2:",s.appendChild(i);const d=document.createElement("input");d.value="Computadora",s.appendChild(d);const l=document.createElement("button");l.classList.add("submitNames"),l.textContent="Listo! Posicionar Flota",l.addEventListener("mousedown",(()=>{l.classList.add("inset")})),l.addEventListener("mouseout",(()=>{l.classList.remove("inset")})),l.addEventListener("mouseup",(()=>{l.classList.remove("inset")})),l.addEventListener("click",(()=>{e.remove(),n.remove(),a.remove(),s.remove(),l.remove(),q(o.value,d.value)})),t.appendChild(e),t.appendChild(n),t.appendChild(a),t.appendChild(s),t.appendChild(l)}()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,